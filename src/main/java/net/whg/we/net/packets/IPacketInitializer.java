package net.whg.we.net.packets;

import java.io.DataInput;
import java.io.IOException;
import net.whg.we.net.IPacketSender;

/**
 * Given to a packet factory in order to create new instances of a packet as
 * needed.
 * 
 * @param <T>
 *     - The type of packet being created.
 */
public interface IPacketInitializer<T extends IBinaryPacket>
{
    /**
     * Creates a new packet from the given input stream. This method can be called
     * from multiple threads at once.
     * 
     * @param input
     *     - The data input to read from.
     * @param sender
     *     - The sender we received this packet from.
     * @return The new packet object.
     * @throws IOException
     *     If an error occurs while preforming this action.
     */
    T loadPacket(DataInput input, IPacketSender sender) throws IOException;

    /**
     * Gets the unique packet identifier for the packet type this initializer
     * generates. This value should match the packet ID returned by
     * {@link IBinaryPacket#getPacketID()} of all packets generated by this
     * initializer.
     * 
     * @return The packet type ID.
     */
    long getPacketID();
}
